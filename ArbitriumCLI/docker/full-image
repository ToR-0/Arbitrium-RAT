FROM ubuntu:16.04

MAINTAINER BenChaliah <ayoub1benchaliah@gmail.com>


USER 0


ENV DEBIAN_FRONTEND noninteractive


RUN apt-get update
RUN apt-get -y install software-properties-common expect unzip wget curl rar


RUN curl -sL https://deb.nodesource.com/setup_10.x | bash -
RUN apt-get install -y nodejs git screen python-pip


RUN pip install Werkzeug==1.0.1 flask==1.1.2 flask-cors==3.0.8 requests==2.23.0 PyJWT==1.7.1
RUN mkdir /root/build_assets



RUN add-apt-repository ppa:openjdk-r/ppa -y
RUN dpkg --add-architecture i386
RUN apt-get update

RUN apt-get install -y openjdk-8-jdk


RUN update-java-alternatives --jre-headless --set java-1.8.0-openjdk-amd64
RUN update-alternatives --set javac /usr/lib/jvm/java-8-openjdk-amd64/bin/javac


RUN mkdir /root/Android /root/Android/sdk /root/Android/sdk/licenses

RUN wget https://dl.google.com/android/repository/tools_r25.2.3-linux.zip \
	&& unzip tools_r25.2.3-linux.zip -d /root/Android/sdk && rm tools_r25.2.3-linux.zip


ENV ANDROID_SDK_ROOT /root/Android/sdk
ENV ANDROID_HOME /root/Android/sdk

ENV PATH ${PATH}:/root/Android/sdk/tools:/root/Android/sdk/platform-tools:/root/Android/sdk/tools/bin

RUN echo -e "\n24333f8a63b6825ea9c5514f83c2829b004d1fee" > /root/Android/sdk/licenses/android-sdk-license
RUN sdkmanager "emulator" "platform-tools" "platforms;android-29" "build-tools;29.0.2"



RUN wget https://dl.google.com/android/repository/android-ndk-r21e-linux-x86_64.zip \
	&& unzip android-ndk-r21e-linux-x86_64.zip -d /root/Android \
	&& mv /root/Android/android-ndk-r21e /root/Android/ndk \
	&& rm android-ndk-r21e-linux-x86_64.zip


ENV PATH ${PATH}:/root/Android/ndk


RUN wget https://services.gradle.org/distributions/gradle-6.5-all.zip \
    && unzip -d /opt/gradle gradle-6.5-all.zip \
    && chmod +775 /opt/gradle \
    && rm -rf gradle-6.5-all.zip

ENV PATH ${PATH}:/opt/gradle/gradle-6.5/bin

RUN npm install -g cordova@10.0.0
RUN cordova telemetry off



ENV WINEARCH   win32
ENV WINEDEBUG  fixme-all
ENV WINEPREFIX /root/wine

RUN apt-get update \
 && apt-get install -y --no-install-recommends wget ca-certificates \
 && dpkg --add-architecture i386 \
 && echo 'deb http://dl.winehq.org/wine-builds/ubuntu/ xenial main' > /etc/apt/sources.list.d/winehq.list \
 && wget 'https://dl.winehq.org/wine-builds/Release.key' -O- | apt-key add \
 && apt-get update \
 && apt-get install -y --allow-unauthenticated --no-install-recommends winehq-staging winetricks


RUN wget "https://www.python.org/ftp/python/2.7.13/python-2.7.13.msi" \
 && wine msiexec /qn /i python-2.7.13.msi \
 && rm -f python-2.7.13.msi \
 && cd /root/wine/drive_c/Python27 \
 && echo 'wine C:\\\\Python27\\\\python.exe "$@"' > /usr/bin/pythonwin \
 && echo 'wine C:\\\\Python27\\\\python.exe -m pip "$@"' > /usr/bin/pipwin \
 && chmod +x /usr/bin/pythonwin \
 && chmod +x /usr/bin/pipwin \
 && pipwin install pyinstaller==3.5


COPY layouts/Windows/windows.sfx /usr/local/etc/

RUN apt install python3-pip -y && pip3 install pyinstaller==3.5